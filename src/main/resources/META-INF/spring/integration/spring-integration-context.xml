<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<int:message-history />
	<!-- <context:annotation-config /> -->
	<!-- <context:component-scan base-package="realdoc.errortest" /> -->
	<!-- The ServiceActivator that will be used by all segments -->
	<bean id="saBean" class="realdoc.errortest.ServiceActivator" />


	<!-- From STDIN To RabbitMQ -->

	<int-stream:stdin-channel-adapter id="consoleIn"
		channel="toRabbit">
		<int:poller fixed-delay="1000" max-messages-per-poll="1" />
	</int-stream:stdin-channel-adapter>

	<int:channel id="toRabbit" />

	<int-amqp:outbound-channel-adapter
		channel="toRabbit" amqp-template="amqpTemplate" exchange-name="si.test.exchange"
		routing-key="si.test.binding" />

	<!-- From RabbitMQ To STDOUT -->

	<int-amqp:inbound-channel-adapter
		channel="fromRabbit" queue-names="si.test.queue" connection-factory="connectionFactory" />

	<int:channel id="fromRabbit">
		<int:interceptors>
			<int:wire-tap channel="loggingChannel" />
		</int:interceptors>
	</int:channel>

	<int:logging-channel-adapter id="loggingChannel"
		log-full-message="true" level="INFO" />

	<int:channel id="parsing-gw-request-channel">
		<int:dispatcher task-executor="taskExecutor" />
	</int:channel>
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
	</bean>

	<int:gateway id="parseGateway" service-interface="realdoc.errortest.ParseGateway"
		default-request-channel="parsing-gw-request-channel"
		default-reply-channel="parsing-gw-reply-channel"
		default-reply-timeout="1000" />
	<int:channel id="parsing-gw-reply-channel" />

	<int:gateway id="gatewayGood" service-interface="realdoc.errortest.IntTestGateway"
		default-request-channel="parsing-gw-request-channel" />

	<int:service-activator input-channel="parsing-gw-request-channel"
		ref="saBean" />

	<bean id="parseGatewayService" class="realdoc.errortest.ParseGatewayService">
		<constructor-arg ref="parseGateway" />
	</bean>

	<!-- Get the data from rabbit and start processing through the adapter pattern. -->

	<!-- #################################################################################################### -->
	<!-- Parsing. -->
	<!-- #################################################################################################### -->
	<int:chain input-channel="fromRabbit" output-channel="parseOutChannel">
		<int:service-activator ref="parseGatewayService"
			method="service" />
	</int:chain>

	<int:channel id="parseOutChannel" />



	<int-stream:stdout-channel-adapter
		id="consoleOut" channel="parseOutChannel" append-newline="true" />



	<!-- Infrastructure -->

	<rabbit:connection-factory id="connectionFactory" />

	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />

	<rabbit:admin connection-factory="connectionFactory" />

	<rabbit:queue name="si.test.queue" />

	<rabbit:direct-exchange name="si.test.exchange">
		<rabbit:bindings>
			<rabbit:binding queue="si.test.queue" key="si.test.binding" />
		</rabbit:bindings>
	</rabbit:direct-exchange>



</beans>
